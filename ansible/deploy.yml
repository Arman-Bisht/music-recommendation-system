---
- name: Deploy Music Recommender Application
  hosts: all
  become: true
  vars:
    app_dir: /opt/music-recommender
    docker_compose_version: "1.29.2"
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
    
    - name: Install required packages
      package:
        name:
          - docker
          - python3-pip
          - git
        state: present
    
    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
    
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
    
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
    
    - name: Clone/update repository
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ app_dir }}"
        version: "{{ git_branch | default('main') }}"
      when: git_repo_url is defined
    
    - name: Copy docker-compose.yml
      template:
        src: templates/docker-compose.yml.j2
        dest: "{{ app_dir }}/docker-compose.yml"
      when: git_repo_url is not defined
    
    - name: Set environment variables
      template:
        src: templates/.env.j2
        dest: "{{ app_dir }}/.env"
    
    - name: Pull Docker images
      command:
        cmd: docker-compose pull
        chdir: "{{ app_dir }}"
    
    - name: Start application with Docker Compose
      command:
        cmd: docker-compose up -d
        chdir: "{{ app_dir }}"
    
    - name: Check if services are running
      command:
        cmd: docker-compose ps
        chdir: "{{ app_dir }}"
      register: docker_ps
      changed_when: false
    
    - name: Display service status
      debug:
        var: docker_ps.stdout_lines